generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model company {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description        String?              @db.VarChar(255)
  name               String               @db.VarChar(255)
  created_at         DateTime             @default(now()) @db.Timestamp(6)
  updated_at         DateTime             @default(now()) @db.Timestamp(6)
  user_id            String               @db.Uuid
  tenant_id          String               @db.VarChar(255)
  user               user                 @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  game               game[]
  game_administrator game_administrator[]
}

model game {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  game_status String    @db.VarChar(255)
  game_type   String    @db.VarChar(255)
  start_time  DateTime  @db.Timestamp(6)
  end_time    DateTime? @db.Timestamp(6)
  company_id  String    @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  company     company   @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  player      player[]
}

model game_administrator {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  company_id String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  company    company  @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model player {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  player_name String   @db.VarChar(255)
  employee_id String   @db.VarChar(255)
  game_id     String   @db.Uuid
  user_id     String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  game        game     @relation(fields: [game_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user        user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email              String               @unique @db.VarChar(255)
  firstName          String?              @db.VarChar(255)
  lastName           String?              @db.VarChar(255)
  roq_user_id        String               @db.VarChar(255)
  tenant_id          String               @db.VarChar(255)
  created_at         DateTime             @default(now()) @db.Timestamp(6)
  updated_at         DateTime             @default(now()) @db.Timestamp(6)
  company            company[]
  game_administrator game_administrator[]
  player             player[]
}
